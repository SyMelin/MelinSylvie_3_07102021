@import "../1_Utils/variables";
@import "../1_Utils/functions";
@import "../1_Utils/mixins";
@import "../1_Utils/placeholders";

@import "../3_Base/fonts";


.restaurant{
    position: relative;
    img{
        width: 100%;
        height: 20rem;
        object-fit: cover;
    }
    &__name{
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        bottom: 0;
        width: 100%;
        background-color: $color-background;
        border-radius: 1.5rem 1.5rem 0 0;
        /*border: 1px solid black;*/
        h1{
            @include font-title;
            border: 1px solid black;
        }
    }
}

.item{
    @include rounded-corner($size:0.825rem);
    @include shadow(0, 0.3rem, 0.3rem, darken($color-background, 15%));
    background-color: $color-white;
    padding: 0;
    overflow: hidden;
    width: 100%;
}

.dish{
    display: flex;
    width: 120%;
}

input {
    visibility: hidden;
    z-index: -1;
}

.anim-ck{
    box-sizing: border-box;
    z-index: 1;
    margin: 0;
    margin-left: -0.5rem;
    width: 120%;
    height: 4rem;
    display: flex;
    flex-direction: row;
    /*justify-content: space-between;*/
    column-gap: 0.5rem;
    align-items: center;
    cursor: pointer;
    & .info{
        @include border;

        @include flex-col-gap($size: 0.25rem);
       /* flex:1;*/
        width: 75%;
        padding: 0.5rem 0 0.5rem 0;
        white-space: nowrap;
        overflow: hidden;
        &__title{
            @include border;
            width: 70%; /*Pas 100% sinon overflow ne peut pas fonctionner */
            font-size: 1.0625rem;
            font-weight: 600;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        &__details{
            @include border;
            width: 95%;
            font-size: 0.875rem;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
    & .trslt{
        display: flex;
        width: 35%;
        height: 100%;
        background-color: pink;
        & .price{
            width: 50%;
            text-align: center;
            font-size: 0.875rem;
            font-weight: bold;
            padding-top: 2rem;
        }
   }
}

.ckbox{
    width: 50%;
    height: 100%;
   /* min-width: 3rem;*/
    padding-top: 1rem;
    padding-bottom: 1rem;
    /*padding-left: 0.8rem;*/
    background-color: $color-tertiary;
    border-radius: 0 $radius $radius 0;
    position: relative;
    & .checkmark{
        position: absolute;
        top: 1.5rem;
        left: 1rem;
        height: 1.25rem;
        width: 1.25rem;
        background-color: white;
        border-radius: 20rem;
        &::after{
            content:"";
            position: absolute;
            display: none;
        }
    }
}

input[type="checkbox"]:checked ~.anim-ck >.trslt>.ckbox >.checkmark::after{
    display: block;
    top: 0.2rem;
    left: 0.4rem;
    width: 0.25rem;
    height: 0.5rem;
    border: solid $color-tertiary;
    border-width: 0 0.1875rem 0.1875rem 0;
    transform: rotate(46deg);
}


input[type="checkbox"]:checked{
    ~.anim-ck{
        >.info{
            animation-name: widthP;
            animation-duration: 500ms;
            animation-delay: 0ms;
            animation-timing-function: ease-in-out;
            transform-origin: left;
            animation-fill-mode: forwards;
        >.info__title{
                animation: widthC 500ms 0ms ease-in-out;/*cubic-bezier(.62,.1,.55,1);*/
                transform-origin: left;
                animation-fill-mode: forwards;
            }
        >.info__details {
                animation: widthC 500ms 0ms ease-in-out; /*cubic-bezier(.62,.1,.55,1);*/
                transform-origin: left;
                animation-fill-mode: forwards;
            }
        }
        >.trslt{
            animation: moveRight 500ms 0ms cubic-bezier(.53,.11,.34,1);
            transform-origin: right;
          /*  animation-direction: alternate;*/
            animation-fill-mode: forwards;
        }
    }
}


@keyframes widthP{
    0%{
        transform: scaleX(1);
    }
    100%{
        transform: scaleX(0.7);
    }
}
@keyframes widthC{
    0%{
        transform: scaleX(1);
    }
    100%{
        transform: scaleX(1.4);
    }
}

@keyframes moveRight{
    0%{
    transform: translateX(0);
    }
    100%{
    transform: translateX(-50%);
    }
}

/*
@keyframes scale{
    0%{
        transform: scaleX(100%);
    }
    50%{
        transform: scaleX(80%);
        animation-timing-function: cubic-bezier(.8,.04,.52,.86);
    }
    100%{
        transform: scaleX(100%);
    }
}

@keyframes translation{
    0%{
    transform: translateX(0%);
    }
    50%{
    transform: translateX(-50%);
    animation-timing-function: cubic-bezier(.8,.04,.52,.86);
    }
    100%{
    transform: translateX(0%);
        }
}
*/